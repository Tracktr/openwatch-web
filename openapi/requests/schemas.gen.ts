// This file is auto-generated by @hey-api/openapi-ts

export const $GetMoviesDto = {
    type: 'object',
    properties: {
        movies: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    id: {
                        type: 'number'
                    },
                    title: {
                        type: 'string'
                    },
                    releaseYear: {
                        type: 'number'
                    },
                    availability: {
                        type: 'array',
                        items: {
                            type: 'object',
                            properties: {
                                streamingService: {
                                    type: 'object',
                                    properties: {
                                        id: {
                                            type: 'number'
                                        },
                                        name: {
                                            type: 'string'
                                        },
                                        logoUrl: {
                                            type: 'string'
                                        }
                                    },
                                    required: ['id', 'name', 'logoUrl']
                                },
                                upvotes: {
                                    type: 'number'
                                },
                                downvotes: {
                                    type: 'number'
                                }
                            },
                            required: ['streamingService']
                        }
                    }
                },
                required: ['id', 'title', 'releaseYear', 'availability']
            }
        }
    },
    required: ['movies']
} as const;

export const $MovieDto = {
    type: 'object',
    properties: {
        id: {
            type: 'number'
        },
        title: {
            type: 'string'
        },
        releaseYear: {
            type: 'number'
        },
        availability: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    streamingService: {
                        type: 'object',
                        properties: {
                            id: {
                                type: 'number'
                            },
                            name: {
                                type: 'string'
                            },
                            logoUrl: {
                                type: 'string'
                            }
                        },
                        required: ['id', 'name', 'logoUrl']
                    },
                    upvotes: {
                        type: 'number'
                    },
                    downvotes: {
                        type: 'number'
                    }
                },
                required: ['streamingService']
            }
        }
    },
    required: ['id', 'title', 'releaseYear', 'availability']
} as const;

export const $CreateMovieDto = {
    type: 'object',
    properties: {
        title: {
            type: 'string'
        },
        releaseYear: {
            type: 'number'
        },
        availability: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    streamingServiceId: {
                        type: 'number'
                    },
                    country: {
                        type: 'string'
                    }
                },
                required: ['streamingServiceId', 'country']
            }
        }
    },
    required: ['title', 'releaseYear', 'availability']
} as const;

export const $AddMovieAvailabilityDto = {
    type: 'object',
    properties: {
        streamingServiceId: {
            type: 'number'
        },
        country: {
            type: 'string'
        }
    },
    required: ['streamingServiceId', 'country']
} as const;

export const $VoteAvailabilityDto = {
    type: 'object',
    properties: {
        movieAvailabilityId: {
            type: 'number'
        },
        isUpvote: {
            type: 'boolean'
        }
    },
    required: ['movieAvailabilityId', 'isUpvote']
} as const;

export const $VoteResponseDto = {
    type: 'object',
    properties: {
        movieAvailabilityId: {
            type: 'number'
        },
        upvotes: {
            type: 'number'
        },
        downvotes: {
            type: 'number'
        },
        success: {
            type: 'boolean'
        }
    },
    required: ['movieAvailabilityId', 'upvotes', 'downvotes', 'success']
} as const;

export const $GetStreamingServicesDto = {
    type: 'object',
    properties: {
        streamingServices: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    id: {
                        type: 'number'
                    },
                    name: {
                        type: 'string'
                    },
                    logoUrl: {
                        type: 'string'
                    },
                    availability: {
                        type: 'array',
                        items: {
                            type: 'object',
                            properties: {
                                movie: {
                                    type: 'object',
                                    properties: {
                                        id: {
                                            type: 'number'
                                        },
                                        title: {
                                            type: 'string'
                                        },
                                        releaseYear: {
                                            type: 'number'
                                        }
                                    },
                                    required: ['id', 'title', 'releaseYear']
                                }
                            },
                            required: ['movie']
                        }
                    }
                },
                required: ['id', 'name', 'logoUrl', 'availability']
            }
        }
    },
    required: ['streamingServices']
} as const;

export const $StreamingServiceDto = {
    type: 'object',
    properties: {
        id: {
            type: 'number'
        },
        name: {
            type: 'string'
        },
        logoUrl: {
            type: 'string'
        },
        availability: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    movie: {
                        type: 'object',
                        properties: {
                            id: {
                                type: 'number'
                            },
                            title: {
                                type: 'string'
                            },
                            releaseYear: {
                                type: 'number'
                            }
                        },
                        required: ['id', 'title', 'releaseYear']
                    }
                },
                required: ['movie']
            }
        }
    },
    required: ['id', 'name', 'logoUrl', 'availability']
} as const;

export const $CreateStreamingServiceDto = {
    type: 'object',
    properties: {
        name: {
            type: 'string'
        },
        logoUrl: {
            type: 'string'
        }
    },
    required: ['name', 'logoUrl']
} as const;

export const $CreateApplicationDto = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            minLength: 1,
            description: 'Application name',
            example: 'My Application'
        }
    },
    required: ['name']
} as const;

export const $ApplicationDto = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            description: 'Application ID'
        },
        name: {
            type: 'string',
            description: 'Application name'
        },
        apiKey: {
            type: 'string',
            description: 'API key (only returned when creating a new application)'
        },
        apiKeys: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    id: {
                        type: 'number',
                        description: 'API key ID'
                    },
                    name: {
                        type: 'string',
                        description: 'API key name'
                    },
                    enabled: {
                        type: 'boolean',
                        description: 'Whether the API key is enabled'
                    },
                    createdAt: {
                        type: 'string',
                        format: 'date-time',
                        description: 'When the API key was created'
                    },
                    key: {
                        type: 'string',
                        description: 'The API key value (only provided when creating new keys)'
                    }
                },
                required: ['id', 'name', 'enabled', 'createdAt']
            },
            description: 'List of API keys for this application'
        }
    },
    required: ['id', 'name']
} as const;

export const $GetApplicationsDto = {
    type: 'object',
    properties: {
        applications: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    id: {
                        type: 'string',
                        description: 'Application ID'
                    },
                    name: {
                        type: 'string',
                        description: 'Application name'
                    },
                    apiKey: {
                        type: 'string',
                        description: 'API key (only returned when creating a new application)'
                    },
                    apiKeys: {
                        type: 'array',
                        items: {
                            type: 'object',
                            properties: {
                                id: {
                                    type: 'number',
                                    description: 'API key ID'
                                },
                                name: {
                                    type: 'string',
                                    description: 'API key name'
                                },
                                enabled: {
                                    type: 'boolean',
                                    description: 'Whether the API key is enabled'
                                },
                                createdAt: {
                                    type: 'string',
                                    format: 'date-time',
                                    description: 'When the API key was created'
                                },
                                key: {
                                    type: 'string',
                                    description: 'The API key value (only provided when creating new keys)'
                                }
                            },
                            required: ['id', 'name', 'enabled', 'createdAt']
                        },
                        description: 'List of API keys for this application'
                    }
                },
                required: ['id', 'name']
            },
            description: 'List of user applications'
        }
    },
    required: ['applications']
} as const;

export const $CreateApiKeyDto = {
    type: 'object',
    properties: {
        name: {
            default: 'Default Key',
            type: 'string',
            description: 'Name of the API key',
            example: 'Production Key'
        }
    }
} as const;

export const $ApiKeyDto = {
    type: 'object',
    properties: {
        id: {
            type: 'number',
            description: 'API key ID'
        },
        name: {
            type: 'string',
            description: 'API key name'
        },
        enabled: {
            type: 'boolean',
            description: 'Whether the API key is enabled'
        },
        createdAt: {
            type: 'string',
            format: 'date-time',
            description: 'When the API key was created'
        },
        key: {
            type: 'string',
            description: 'The API key value (only provided when creating new keys)'
        }
    },
    required: ['id', 'name', 'enabled', 'createdAt']
} as const;